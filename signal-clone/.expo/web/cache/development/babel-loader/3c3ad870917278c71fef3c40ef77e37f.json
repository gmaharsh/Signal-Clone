{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/maharshgheewala/Desktop/apps/React-Native/Signal-Clone/signal-clone/screens/RegisterScreen.js\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"Back to Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {\n    auth.createUserWithEmailandPassword(email, password).then(function (authUser) {\n      authUser.user.update({\n        displayName: name,\n        photoUrl: imageUrl || 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png'\n      });\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    h3: true,\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Create a signal account\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Full Name\",\n    autofocus: true,\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    autofocus: true,\n    type: \"text\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    autofocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"ImageUrl(Optional)\",\n    autofocus: true,\n    type: \"text\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmit: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    style: styles.button,\n    raised: true,\n    onPress: register,\n    title: \"Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/maharshgheewala/Desktop/apps/React-Native/Signal-Clone/signal-clone/screens/RegisterScreen.js"],"names":["React","useLayoutEffect","useState","StatusBar","Button","Input","Text","auth","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headerBackTitle","register","createUserWithEmailandPassword","then","authUser","user","update","displayName","photoUrl","styles","container","marginBottom","inputContainer","text","button","StyleSheet","create","flex","justifyContent","alignItems","padding","backgroundColor","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar'\nimport { KeyboardAvoidingView, StyleSheet, View } from 'react-native';\nimport { Button, Input, Text } from 'react-native-elements'\nimport { auth } from '../firebase';\n\nconst RegisterScreen = ({ navigation }) => {\n    \n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: \"Back to Login\",\n            \n        })\n    },[navigation])\n\n    const register = () => {\n        auth\n            .createUserWithEmailandPassword(email, password)\n            .then(authUser => {\n                authUser.user.update({\n                    displayName: name,\n                    photoUrl: imageUrl || 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png',\n                    \n                })\n            })\n            \n    }\n\n    return (\n        <KeyboardAvoidingView style={styles.container}>\n            <StatusBar style=\"light\" />\n            <Text h3 style={{ marginBottom: 50 }}>\n                Create a signal account\n            </Text>\n            <View style={styles.inputContainer}>\n                <Input\n                    placeholder=\"Full Name\"\n                    autofocus\n                    type=\"text\"\n                    value={name}\n                    onChangeText={(text) =>setName(text)}\n                />\n                <Input\n                    placeholder=\"Email\"\n                    autofocus\n                    type=\"text\"\n                    value={email}\n                    onChangeText={(text) =>setEmail(text)}\n                />\n                <Input\n                    placeholder=\"Password\"\n                    secureTextEntry\n                    value={password}\n                    onChangeText={(text) =>setPassword(text)}\n                    autofocus\n                />\n                <Input\n                    placeholder=\"ImageUrl(Optional)\"\n                    autofocus\n                    type=\"text\"\n                    value={imageUrl}\n                    onChangeText={(text) => setImageUrl(text)}\n                    onSubmit={register}\n                />\n            </View>\n            <Button style={styles.button} raised onPress={register} title=\"Register\" />\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 10,\n        backgroundColor:\"white\",\n    },\n    inputContainer: {\n        width: 300,\n    },\n    button: {\n        width: 200,\n        marginTop:10\n    }\n})\n"]},"metadata":{},"sourceType":"module"}